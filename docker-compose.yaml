# docker-compose.yml
services:
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile  
    container_name: gateway
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - PYTHONUNBUFFERED=1
      - GATEWAY_HOST=0.0.0.0
      - GATEWAY_PORT=9999
      - BATCH_SIZE=100
      - RABBITMQ_OUTPUT_QUEUE=csv_queue
      - RABBITMQ_INPUT_QUEUE=query_queue

  parser:
    build:
      context: .
      dockerfile: parser/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_QUEUE=csv_queue
      - RABBITMQ_OUTPUT_EXCHANGE=movie_exchange
      - KEEP_COLUMNS=budget,genres,id,original_language,overview,production_countries,release_date,revenue,title

  filter_argentina_2000:
    build:
      context: .
      dockerfile: filter/Dockerfile 
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_QUEUE=movie1_queue
      - RABBITMQ_CONSUMER_TAG=argentina_2000
      - RABBITMQ_OUTPUT_QUEUE=movie_argentina_queue
      - RABBITMQ_EXCHANGE=movie_exchange
      - RABBITMQ_OUTPUT_EXCHANGE=argentina_exchange
      - MOVIE_FILTERS=production_countries:in(Argentina);release_date:more(1999)

  filter_spain_2000s:
     build:
        context: .
        dockerfile: filter/Dockerfile 
     depends_on:
        rabbitmq:
          condition: service_healthy
     networks:
        - app-network
     environment:
        - PYTHONUNBUFFERED=1
        - RABBITMQ_QUEUE=movie_argentina_queue
        - RABBITMQ_CONSUMER_TAG=spain_2000s
        - RABBITMQ_OUTPUT_QUEUE=deliver_queue
        - RABBITMQ_EXCHANGE=argentina_exchange
        - MOVIE_FILTERS=production_countries:in(Spain);release_date:less(2010)  

  deliver:
    build:
      context: .
      dockerfile: deliver/Dockerfile
    container_name: deliver
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_QUEUE=deliver_queue
      - RABBITMQ_OUTPUT_QUEUE=query_queue
      - KEEP_COLUMNS=genres,title

  router:
    build:
      context: .
      dockerfile: router/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    environment: # TODO: Definir mejores nombres
      - PYTHONUNBUFFERED=1
      - RABBITMQ_QUEUE=movie_argentina_queue
      - RABBITMQ_EXCHANGE=argentina_exchange
      - RABBITMQ_CONSUMER_TAG=router
      - RABBITMQ_OUTPUT_EXCHANGE=movies_router_exchange
      - NUMBER_OF_NODES=3

  # TODO: borrar, esto es solo a modo de ejemplo
  router_consumer:
     build:
        context: .
        dockerfile: filter/Dockerfile 
     depends_on:
        rabbitmq:
          condition: service_healthy
     networks:
        - app-network
     environment:
        - PYTHONUNBUFFERED=1
        - RABBITMQ_QUEUE=router_consumer_1 # Queue "local" del nodo
        - RABBITMQ_EXCHANGE=movies_router_exchange # Este es output_exchange del router
        - RABBITMQ_EXCHANGE_TYPE=direct # Required
        - RABBITMQ_OUTPUT_QUEUE=router_consumer_1_output
        - MOVIE_FILTERS=production_countries:in(Argentina)
        - ROUTING_KEY=0 # Esto deberia ser el id del nodo (entre 0 y NUMBER_OF_NODES - 1) 

  client:
    build:
      context: .
      dockerfile: client/Dockerfile  # Apunta al Dockerfile en client/
    container_name: client
    depends_on:
      - gateway
    networks:
      - app-network
    environment:
      - PYTHONUNBUFFERED=1
      - GATEWAY_HOST=gateway
      - GATEWAY_PORT=9999
    deploy:
      restart_policy:
        condition: none

networks:
  app-network:
    driver: bridge
